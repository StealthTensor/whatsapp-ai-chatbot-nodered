[
    {
        "id": "c8bfbfc42387ea39",
        "type": "function",
        "z": "7d433a6e962712a1",
        "name": "Normalize + Filter + Build OpenRouter request",
        "func": "// === CONFIG: allow only these numbers (E.164, with +, no spaces) ===\nconst allowedNumbers = [\n  \"+911234567890\" // <-- REPLACE with your allowed number(s)\n];\n\n// --- Get raw sender ---\nlet rawFrom = msg.from || msg.chatID || (msg.message && (msg.message.key && (msg.message.key.remoteJid || msg.message.key.participant))) || \"\";\nif (!rawFrom) { node.warn(\"No sender found\"); return null; }\n\n// --- Normalize to E.164 string used by chats-out: +<country><number> ---\nlet normalized = String(rawFrom);\nif (normalized.includes(\"@\")) normalized = normalized.split(\"@\")[0];\n// if digits only, add leading +\nif (/^\\d+$/.test(normalized)) normalized = \"+\" + normalized;\n// very basic sanity\nif (!/^\\+\\d{7,15}$/.test(normalized)) { node.warn(`Cannot normalize sender: ${rawFrom}`); return null; }\n\n// --- Filter ---\nif (!allowedNumbers.includes(normalized)) { return null; }\n\n// --- Extract text body from WhatsApp shapes ---\nlet text = \"\";\nif (msg.payload && typeof msg.payload === 'object') {\n  text = msg.payload.text || msg.payload.body || msg.payload.message || msg.payload.caption || \"\";\n} else {\n  text = (msg.payload ?? \"\").toString();\n}\n\n// --- Prepare OpenRouter request ---\nmsg.headers = {\n  Authorization: \"Bearer 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\", // <-- PUT YOUR KEY\n  \"Content-Type\": \"application/json\",\n  \"X-Title\": \"Node-RED WhatsApp Bot\"\n};\n\nmsg.payload = {\n  model: \"meta-llama/llama-3.3-8b-instruct:free\",\n  messages: [\n    { role: \"system\", content: \"You are a helpful WhatsApp assistant. Keep replies concise, friendly, and under 800 characters unless asked. No markdown unless user asks. If the user asks about images or links, keep answers plain.\" },\n    { role: \"user\", content: text }\n  ],\n  temperature: 0.7\n};\n\n// Keep destination for chats-out\nmsg.toNumber = normalized; // REQUIRED by chats-out\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 120,
        "wires": [
            [
                "37c8971294ba900b"
            ]
        ]
    }
]